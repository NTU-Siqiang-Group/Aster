/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_rocksdb_RocksGraph */

#ifndef _Included_org_rocksdb_RocksGraph
#define _Included_org_rocksdb_RocksGraph
#ifdef __cplusplus
extern "C" {
#endif
#undef org_rocksdb_RocksGraph_NOT_FOUND
#define org_rocksdb_RocksGraph_NOT_FOUND -1L
/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    Reinitialize
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_RocksGraph_Reinitialize__JI
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    Reinitialize
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_RocksGraph_Reinitialize__JII
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    AddVertex
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksGraph_AddVertex
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    AddEdge
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksGraph_AddEdge
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    DeleteEdge
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksGraph_DeleteEdge
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    CountVertex
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_RocksGraph_CountVertex
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    CountEdge
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_RocksGraph_CountEdge
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    GetOutNeighbours
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_rocksdb_RocksGraph_GetOutNeighbours
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    GetInNeighbours
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_rocksdb_RocksGraph_GetInNeighbours
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    GetAllNeighbours
 * Signature: (JJ)[[J
 */
JNIEXPORT jobjectArray JNICALL Java_org_rocksdb_RocksGraph_GetAllNeighbours
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    InDegree
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_RocksGraph_InDegree
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    OutDegree
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_RocksGraph_OutDegree
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    InDegreeFast
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_RocksGraph_InDegreeFast
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    OutDegreeFast
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_RocksGraph_OutDegreeFast
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    Terminate
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksGraph_Terminate
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    SetWorkload
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksGraph_SetWorkload
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     org_rocksdb_RocksGraph
 * Method:    disposeInternal
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksGraph_disposeInternal
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
